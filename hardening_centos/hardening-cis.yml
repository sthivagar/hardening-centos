---
- hosts: prod
## armour-copy-role now copies all the scripts required.
  roles:
    - scripts-copy-role
    - filesystem-hardening
    - softwareupdate-hardening
    - sudoconfig-hardening
    - fileintegrity-checking
    - secureboot-hardening
    - processhardening-coredumps
    - manacccontrol-hardening
    - warningbanners
    - services-hardening
    - network-configuration
    - firewall-hardening
    - logging-auditing
    - aaa-hardening
    - ssh-hardening
    - authselect-hardening
    - pam-hardening
    - usraccenv-hardening
    - systemmain-hardening
    - usr-grp-settings
  tasks:

# Comment: I created this user to manage any tasks related to provisioning if required. 
  - name: Create an Admin user to manage tasks 
    user:
      name: admin
      password: '$6$yHxAvwa82pPuAOHh$O7kjs2pqQWp0.Tg7qejlQfXMrxckT1OvGXbYoCKv/lBfORitoTwReHNsSyir38jtybihDyruBdD/JPN.oVcNs.'
      groups: wheel
      update_password: always
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

## Create Groups : This has to be revised to understand and differentiate based on the purpose of the VM. My suggestion is that to create a group called ops and includes the team of ops. The ops group should be able to access the resources those are required for support and should be allowed in the LDAP. Same way we could create dev and test groups with necessary permissions in order to perform their tasks. 

  - name: Create Authorized groups
    group:
      name: armour
      state: present
